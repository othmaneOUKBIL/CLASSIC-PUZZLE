""" 
Goal

Find the winning move for the O player on the following tic-tac-toe board.

Input
3 lines: a 3-character string (ex: ".OX") displaying the board current state
- "." for an empty square
- "X" for square occupied by X player
- "O" for square occupied by O player

Output
3 lines: a 3-character string (ex: ".OX") displaying the board state after an O winning move.
- "." for an empty square
- "X" for square occupied by X player
- "O" for square occupied by O player

If there is no winning move, print "false".
Constraints
- The final board must be the input board plus a new square for O player.
- The board cannot be already in a won situation in the inputs.
Example
Input

OO.
...
...

Output
OOO
...
...

"""
#Code
l=[[i for i in input()] for i in range(3)]
r=[]
val=0
for i in range(3):
    if l[i].count('O')==2 and l[i].count('X')==0:
        r.append(['O','O','O'])
        val+=1
    else:
        r.append(l[i])
for i in range(3):
    s=0
    for j in range(3):
        if l[j][i]=='O':
            s+=1
        elif l[j][i]=='X':
            s-=1
    if s==2:
        r[0][i]='O'
        r[1][i]='O'
        r[2][i]='O'
        val+=1
s=0
for i in range(3):
    if l[i][i]=='O':
        s+=1
    elif l[i][i]=='X':
        s-=1
if s==2:
    r[0][0]='O'
    r[1][1]='O'
    r[2][2]='O'
    val+=1
s=0
for i in range(3):
    if l[i][2-i]=='O':
        s+=1
    elif l[i][2-i]=='X':
        s-=1
if s==2:
    r[0][2]='O'
    r[1][1]='O'
    r[2][0]='O'
    val+=1
sol=[]
for i in range(3):
    x=''
    for j in r[i]:
        x+=j
    sol.append(x)
if val==0:print('false')
else:
    for i in sol:print(i)
